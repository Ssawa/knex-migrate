#!/usr/bin/env node
/* eslint no-console:0, no-var:0 */
var Liftoff = require('liftoff');
var interpret = require('interpret');
var chalk = require('chalk');
var tildify = require('tildify');
var Migrator = require('../lib');
var Cli = require('../lib/cli');

function initMigrator(env, commander) {

  Cli.checkLocalModule(env);

  if (!env.configPath) {
    Cli.exit('No knexfile found in this directory. Specify a path with --knexfile');
  }

  if (process.cwd() !== env.cwd) {
    process.chdir(env.cwd);
    console.log('Working directory changed to', chalk.magenta(tildify(env.cwd)));
  }

  var environment = commander.env || process.env.NODE_ENV;
  var defaultEnv = 'development';
  var config = require(env.configPath);

  if (!environment && typeof config[defaultEnv] === 'object') {
    environment = defaultEnv;
  }

  if (environment) {
    console.log('Using environment:', chalk.magenta(environment));
    config = config[environment] || config;
  }

  if (!config) {
    console.log(chalk.red('Warning: unable to read knexfile config'));
    process.exit(1);
  }

  if (Cli.argv.debug !== undefined)
    config.debug = Cli.argv.debug;
  var knex = require(env.modulePath);
  return new Migrator(knex(config));
}

Cli.bootstrap(initMigrator);
